[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Zonest\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Zonest\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.0 (Oracle Corporation Java 17.0.1)
[debug] Load.defaultLoad until apply took 312.1091ms
[debug]           Load.loadUnit: plugins took 155.8567ms
[debug]           Load.loadUnit: defsScala took 0.308ms
[debug] [Loading] Scanning directory C:\Users\Zonest\IdeaProjects\Kursach\project
[debug]             Load.loadUnit: mkEval took 9.1112ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Zonest\IdeaProjects\Kursach\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 27.3055 ms
[info] loading settings for project kursach-build from idea.sbt ...
[debug]               Load.resolveProject(kursach-build) took 78.9312ms
[debug]             Load.loadTransitive: finalizeProject(Project(id kursach-build, base: C:\Users\Zonest\IdeaProjects\Kursach\project, plugins: List(<none>))) took 121.6183ms
[debug] [Loading] Done in C:\Users\Zonest\IdeaProjects\Kursach\project, returning: (kursach-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 7293.0102ms
[debug]           Load.loadUnit: cleanEvalClasses took 12.4677ms
[debug]         Load.loadUnit(file:/C:/Users/Zonest/IdeaProjects/Kursach/project/, ...) took 7470.0235ms
[debug]       Load.apply: load took 7655.4386ms
[debug]       Load.apply: resolveProjects took 18.6438ms
[debug]       Load.apply: finalTransforms took 71.267ms
[debug]       Load.apply: config.delegates took 8.1962ms
[debug]       Load.apply: Def.make(settings)... took 833.7983ms
[debug]       Load.apply: structureIndex took 118.9458ms
[debug]       Load.apply: mkStreams took 1.6855ms
[info] loading project definition from C:\Users\Zonest\IdeaProjects\Kursach\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 13014.5453ms
[debug]     Load.loadUnit: defsScala took 0.0039ms
[debug] [Loading] Scanning directory C:\Users\Zonest\IdeaProjects\Kursach
[debug]       Load.loadUnit: mkEval took 0.2814ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.8302 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 39.4678ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Zonest\IdeaProjects\Kursach, plugins: List(<none>))) took 45.6333ms
[debug] [Loading] Done in C:\Users\Zonest\IdeaProjects\Kursach, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 3739.0419ms
[debug]     Load.loadUnit: cleanEvalClasses took 35.2262ms
[debug]   Load.loadUnit(file:/C:/Users/Zonest/IdeaProjects/Kursach/, ...) took 16791.0099ms
[debug] Load.apply: load took 16832.0804ms
[debug] Load.apply: resolveProjects took 0.2264ms
[debug] Load.apply: finalTransforms took 44.94ms
[debug] Load.apply: config.delegates took 0.3667ms
[debug] Load.apply: Def.make(settings)... took 134.6ms
[debug] Load.apply: structureIndex took 53.4849ms
[debug] Load.apply: mkStreams took 0.0024ms
[info] set current project to Kursach (in build file:/C:/Users/Zonest/IdeaProjects/Kursach/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 59587 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 59587, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Kursach (in build file:/C:/Users/Zonest/IdeaProjects/Kursach/)
[debug] > Exec(idea-shell, None, None)
